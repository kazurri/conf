# colorscheme
[[plugins]]
repo = 'joshdick/onedark.vim'
hook_add = '''
  autocmd MyAutoCmd VimEnter * nested colorscheme onedark
'''

# lightline
[[plugins]]
repo = 'ryanoasis/vim-devicons'

[[plugins]]
repo = 'mengelbrecht/lightline-bufferline'
hook_add = '''
  let g:lightline#bufferline#enable_devicons = 1
  let g:lightline#bufferline#clickable = 1
'''

[[plugins]]
repo = 'itchyny/lightline.vim'
depends = ['vim-devicons','lightline-bufferline']
hook_add = '''
  let g:lightline = {'colorscheme': 'one'}
  let g:lightline.tabline = {'left': [['buffers']], 'right': [['close']]}
  let g:lightline.component_expand = {'buffers': 'lightline#bufferline#buffers'}
  let g:lightline.component_raw = {'buffers': 1}
  let g:lightline.component_type = {'buffers': 'tabsel'}
'''

# git
[[plugins]]
repo = 'airblade/vim-gitgutter'

[[plugins]]
repo = 'tpope/vim-fugitive'

# fzf
[[plugins]]
repo = 'junegunn/fzf'
build = './install --all'
merged = 0

[[plugins]]
repo = 'junegunn/fzf.vim'
depends = ['fzf']
hook_add = '''
  let g:fzf_preview_window = ['right:50%', 'ctrl-/']
  function! RipgrepFzf(query, fullscreen)
    let command_fmt = 'rg --column --line-number --no-heading --color=always --smart-case -- %s || true'
    let initial_command = printf(command_fmt, shellescape(a:query))
    let reload_command = printf(command_fmt, '{q}')
    let spec = {'options': ['--phony', '--query', a:query, '--bind', 'change:reload:'.reload_command]}
    call fzf#vim#grep(initial_command, 1, fzf#vim#with_preview(spec), a:fullscreen)
  endfunction
  command! -nargs=* -bang RG call RipgrepFzf(<q-args>, <bang>0)
'''
